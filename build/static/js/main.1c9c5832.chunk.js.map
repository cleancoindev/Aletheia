{"version":3,"sources":["components/Intro.js","components/Analyze.js","App.js","serviceWorker.js","index.js"],"names":["Intro","db","useState","poemName","setPoemName","versions","setVersions","poems","docs","doc","includes","poem","push","docOptions","i","length","j","doc2","key","name","value","translator","id","className","htmlFor","onChange","e","target","map","href","src","alt","COMMON_WORDS","Set","EMOTION_MAP","sad","upset","angry","scared","hurt","disappointed","pained","happy","excited","satisfied","disgusted","dead","none","heatHSL","val","DocAnalyze","otherDoc","showHeader","docSent","sections","sec","gcp","sent_score","sent_mag","reduce","acc","curr","speakers","quotes","corenlp","secs","quotesBySpeaker","quote","find","text","startIdx","sentences","findIndex","s","substring","endIdx","sumSent","sent","speaker","canonicalSpeaker","quoteData","sort","a","b","extractQuotes","words","fullText","flat","join","replace","split","counts","forEach","keys","Object","idx","word","has","toLowerCase","count","topWords","stats","word_cnt","otherVal","readability","readabilitygrades","FleschReadingEase","toFixed","sentenceinfo","words_per_sentence","syll_per_word","characters_per_word","complex_words","type_token_ratio","console","log","style","width","paddingLeft","book","fontSize","color","stat","fontWeight","SpeakerBtn","WordBtn","RowAnalyze","docA","docB","secA","secB","TextBlock","sentiment","event2Mind","allennlp","event_to_mind","oreact_top_k_predicted_tokens","event2MindProbs","oreact_top_k_log_probabilities","mindWords","qa_what","best_span_str","qa_why","item","regex","RegExp","entities","ent","salience","Math","abs","textrazor","borderLeftColor","marginBottom","dangerouslySetInnerHTML","__html","visable","setVisable","display","padding","backgroundColor","onClick","min","w","max","Analyze","selected","rowCnt","section_cnt","justifyContent","alignItems","Array","textAlign","App","props","state","fetch","then","res","json","setState","this","search","window","location","docNames","React","Component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c9c5832.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Intro({ db }) {\r\n  let [poemName, setPoemName] = useState('none');\r\n  let [versions, setVersions] = useState([]);\r\n  let poems = [];\r\n  let docs = [];\r\n  if (db) {\r\n    for (let doc of db) {\r\n      if (!poems.includes(doc.poem)) {\r\n        poems.push(doc.poem);\r\n      }\r\n      if (doc.poem == poemName) {\r\n        docs.push(doc);\r\n      }\r\n    }\r\n  }\r\n  let docOptions = [];\r\n  for (let i = 0; i < docs.length; i++) {\r\n    for (let j = i + 1; j < docs.length; j++) {\r\n      let doc = docs[i];\r\n      let doc2 = docs[j];\r\n      docOptions.push(<option key={doc.name + doc2.name} value={doc.name + '-vs-' + doc2.name}>{doc.translator} vs {doc2.translator}</option>);\r\n    }\r\n  }\r\n  return (\r\n    <div id=\"wrapper\" className=\"divided\">\r\n      <section className=\"banner style1 orient-left content-align-left image-position-right fullscreen onload-image-fade-in onload-content-fade-right\">\r\n        <div className=\"content\">\r\n          <h1>Aletheia</h1>\r\n          <p className=\"major\">An AI-powered epic translation comparison tool.</p>\r\n          {!db && <p className=\"major\"><i>Loading Archive...</i></p>}\r\n          {db &&\r\n            <div className=\"fields\">\r\n              <div className=\"field\">\r\n                <label htmlFor=\"poem\">Poem</label>\r\n                <select name=\"poem\" id=\"poem\" onChange={(e) => setPoemName(e.target.value)}>\r\n                  <option value=\"\">- Poem -</option>\r\n                  {poems.map(name => <option key={name} value={name}>{name}</option>)}\r\n                </select>\r\n              </div>\r\n              <br />\r\n              <div className=\"field\">\r\n                <label htmlFor=\"versions\">Versions</label>\r\n                <select name=\"versions\" id=\"versions\" onChange={(e) => {\r\n                  setVersions(e.target.value)\r\n                }}>\r\n                  <option value=\"\">- A vs. B -</option>\r\n                  {docOptions}\r\n                </select>\r\n              </div>\r\n            </div>}\r\n          <br />\r\n          {db && <ul className=\"actions stacked\">\r\n            <li><a href={`/?${versions}`} className=\"button big wide smooth-scroll-middle\">Analyze</a></li>\r\n          </ul>}\r\n        </div>\r\n        <div className=\"image\">\r\n          <img src=\"images/banner.jpg\" alt=\"\" />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Intro;\r\n","import React, { useState } from 'react';\r\n\r\n\r\nconst COMMON_WORDS = new Set([\r\n  'the', 'and', 'of', 'to', 'with', 'her', 'in', 'a', 'his', 'i', 'she', 'my', 'from', \r\n  'on', 'you', 'that', 'he', 'your', 'for', 'is', '-', 'as', 'by', 'not', 'all', 'me', \r\n  'this', 'have', 'or', 'was', 'it', 'their', 'will', 'him', 'now', 'at', 'be', 'when', \r\n  'do', 'what', 'while', 'but', 'has', 'shall', 'were', 'are', 'through', '', 'there', \r\n  'one', 'out', 'these', 'so', 'had', 'nor', 'down', 'such', 'into', 'our', 'away', \r\n  'if', 'who', 'they', 'up', 'first', 'own', 'thus', 'spoke', 'whom', 'them', 'its', \r\n  'once', 'over', 'then', 'went', 'upon', 'said', 'may', 'we', 'which'\r\n]);\r\n\r\nconst EMOTION_MAP = {\r\n  sad: '😢',\r\n  upset: '😩',\r\n  angry: '😠',\r\n  scared: '😨',\r\n  hurt: '🤕',\r\n  disappointed: '😞',\r\n  pained: '😧',\r\n  happy: '😄',\r\n  excited: '🤩',\r\n  satisfied: '😊',\r\n  disgusted: '😒',\r\n  dead: '💀',\r\n  none: '',\r\n  '@@UNKNOWN@@': ''\r\n};\r\n  \r\n\r\nfunction heatHSL(val) {\r\n  return `hsl(${55 + val}, 75%, 75%)`\r\n}\r\n\r\nfunction extractQuotes(doc) {\r\n  let quotes = doc.corenlp.quotes;\r\n  let secs = doc.sections;\r\n  let quotesBySpeaker = {};\r\n  for(let quote of quotes) {\r\n    let sec = secs.find(sec => sec.text.includes(quote.text));\r\n    if(!sec) {\r\n      continue;\r\n    }\r\n    let startIdx = sec.gcp.sentences\r\n      .findIndex(s => s.text.includes(quote.text.substring(0, 10)));\r\n    let endIdx = sec.gcp.sentences\r\n      .findIndex(s => s.text.includes(quote.text.substring(quote.text.length - 10)));\r\n    if(startIdx == -1 || endIdx == -1) {\r\n      continue;\r\n    }\r\n    let sumSent = 0;\r\n    for(let i = startIdx; i <= endIdx; i++) {\r\n      sumSent += sec.gcp.sentences[i].sent_score * sec.gcp.sentences[i].sent_mag;\r\n    }\r\n    quote.sent = sumSent / (endIdx - startIdx + 1);\r\n    if(!(quote.speaker in quotesBySpeaker)) {\r\n      quotesBySpeaker[quote.speaker] = [];\r\n    }\r\n    if(!(quote.canonicalSpeaker in quotesBySpeaker)) {\r\n      quotesBySpeaker[quote.canonicalSpeaker] = [];\r\n    }\r\n    quotesBySpeaker[quote.speaker].push(quote);\r\n    quotesBySpeaker[quote.canonicalSpeaker].push(quote);\r\n  }\r\n  let speakers = [];\r\n  for(let speaker in quotesBySpeaker) {\r\n    let quoteData = {\r\n      name: speaker,\r\n      quotes: quotesBySpeaker[speaker]\r\n    };\r\n    quoteData.sent = quoteData.quotes\r\n      .map(quote => quote.sent)\r\n      .reduce((acc, curr) => acc + curr * (1 / quoteData.quotes.length), 0);\r\n    speakers.push(quoteData);\r\n  }\r\n  speakers.sort((a, b) => a.sent - b.sent);\r\n  return speakers;\r\n}\r\n\r\nfunction topWords(doc) {\r\n  let fullText = doc.sections.map(sec => sec.text).flat().join(' ').replace(/[\\.!\"'?,]/g, '').split(' ');\r\n  let counts = {};\r\n  fullText.forEach(val => counts[val] = (counts[val] || 0) + 1);\r\n  let keys = Object.keys(counts);\r\n  keys.sort((a, b) => counts[b] - counts[a]);\r\n  let words = [];\r\n  for(let idx = 0; words.length < 10 && idx < keys.length; idx++) {\r\n    let word = keys[idx];\r\n    if(COMMON_WORDS.has(word.toLowerCase())) {\r\n      continue;\r\n    }\r\n    words.push({word: word, count: counts[word]});\r\n  }\r\n  return words;\r\n}\r\n\r\nfunction Analyze({ selected }) {\r\n  let rowCnt = Math.min(selected[0].section_cnt, selected[1].section_cnt);\r\n  return (\r\n    <div>\r\n      <div style={{ display: 'flex', justifyContent: 'space-around', alignItems: 'baseline'}}>\r\n        <DocAnalyze doc={selected[0]} otherDoc={selected[1]} showHeader={true} />\r\n        <DocAnalyze doc={selected[1]} otherDoc={selected[0]} />\r\n      </div>\r\n      {[...Array(rowCnt).keys()].map(idx =>\r\n        <div style={{ display: 'flex', justifyContent: 'space-around', textAlign: 'left' }}>\r\n          <RowAnalyze key={idx} docs={selected} idx={idx} />\r\n        </div>)}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DocAnalyze({ doc, otherDoc, showHeader }) {\r\n  let sumSent = doc.sections\r\n    .map(sec => sec.gcp.sent_score * sec.gcp.sent_mag)\r\n    .reduce((acc, curr) => acc + curr, 0);\r\n  let docSent = sumSent / doc.sections.length;\r\n  let speakers = extractQuotes(doc);\r\n  let words = topWords(doc);\r\n  let stats = [\r\n    {name: 'Words', \r\n      val: doc.word_cnt, \r\n      otherVal: otherDoc.word_cnt},\r\n    {name: 'Readability', \r\n      val: doc.readability.readabilitygrades.FleschReadingEase.toFixed(2),\r\n      otherVal: otherDoc.readability.readabilitygrades.FleschReadingEase.toFixed(2)},\r\n    {name: 'Words/Sentence', \r\n      val: doc.readability.sentenceinfo.words_per_sentence.toFixed(2),\r\n      otherVal: otherDoc.readability.sentenceinfo.words_per_sentence.toFixed(2)},\r\n    {name: 'Syllables/Word', \r\n      val: doc.readability.sentenceinfo.syll_per_word.toFixed(2),\r\n      otherVal: otherDoc.readability.sentenceinfo.syll_per_word.toFixed(2)},\r\n    {name: 'Letters/Word', \r\n      val: doc.readability.sentenceinfo.characters_per_word.toFixed(2),\r\n      otherVal: otherDoc.readability.sentenceinfo.characters_per_word.toFixed(2)},\r\n    {name: 'Complex Words', \r\n      val: doc.readability.sentenceinfo.complex_words,\r\n      otherVal: otherDoc.readability.sentenceinfo.complex_words},\r\n    {name: 'Type-Token Ratio', \r\n      val: doc.readability.sentenceinfo.type_token_ratio.toFixed(3),\r\n      otherVal: otherDoc.readability.sentenceinfo.type_token_ratio.toFixed(3)}\r\n  ];\r\n  console.log(doc);\r\n  return (\r\n    <section className=\"banner style1\" style={{ width: '45%' }}>\r\n      <div className=\"content\" style={{ paddingLeft: '0' }}>\r\n        {showHeader ? <h1>{doc.poem} / {doc.book}</h1> : <h1>&nbsp;</h1>}\r\n        <h1 style={{ fontSize: '2em' }}>{doc.translator}</h1>\r\n        <span className=\"major\">Total Sentiment: <b style={{color: heatHSL(docSent * 100)}}>{docSent.toFixed(2)}</b></span>\r\n        <br />\r\n        {stats.map(stat => [\r\n          stat.val > stat.otherVal ? \r\n            <span className=\"major\">{stat.name}: <b style={{fontWeight: '600'}}>{stat.val}</b></span> :\r\n            <span className=\"major\">{stat.name}: <b>{stat.val}</b></span>\r\n          , <br />])}\r\n        <br />\r\n        <span>Sentiment by Quote Speaker:</span><br/>\r\n        {speakers.map(speaker => <SpeakerBtn speaker={speaker}/>)}\r\n        <br /><br />\r\n        <span>Unique Words:</span><br/>\r\n        {words.map(word => <WordBtn word={word} words={words} />)}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction RowAnalyze({ idx, docs, key }) {\r\n  let [docA, docB] = docs;\r\n  let [secA, secB] = [docA.sections[idx], docB.sections[idx]];\r\n  return [\r\n    <TextBlock key={'a' + key} sec={secA} doc={docA} />,\r\n    <TextBlock key={'b' + key} sec={secB} doc={docB} />\r\n  ];\r\n}\r\n\r\nfunction TextBlock({ sec, key, doc }) {\r\n  let sentiment = sec.gcp.sent_score * sec.gcp.sent_mag * 60;\r\n  let text = sec.text;\r\n\r\n  let event2Mind = sec.allennlp.event_to_mind.oreact_top_k_predicted_tokens;\r\n  let event2MindProbs = sec.allennlp.event_to_mind.oreact_top_k_log_probabilities;\r\n  let mindWords = [];\r\n  if(event2Mind[0][0] != 'none') {\r\n    for(let i in event2Mind) {\r\n      if(event2MindProbs[i] > -3) {\r\n        mindWords.push(EMOTION_MAP[event2Mind[i][0]]);\r\n      }\r\n    }\r\n  }\r\n\r\n  let qa_what_str = sec.allennlp.qa_what.best_span_str;\r\n  let qa_why_str = sec.allennlp.qa_why.best_span_str;\r\n  for(let item of [qa_what_str, qa_why_str]) {\r\n    try {\r\n      let regex = new RegExp(`\\\\b${item}\\\\b`);\r\n      text = text.replace(regex, `<b>${item}</b>`);\r\n    } catch(e) {}\r\n  }\r\n\r\n  for(let ent of sec.gcp.entities) {\r\n    if(ent.salience < 0.01) {\r\n      continue;\r\n    }\r\n    let sent = ent.sent_score * ent.sent_mag;\r\n    let regex = new RegExp(`\\\\b${ent.name}\\\\b`);\r\n    if(Math.abs(sent) > 0.5) {\r\n      text = text.replace(regex, `<b style=\"color: ${heatHSL(sent * 60)}\">${ent.name}</b>`);\r\n    } else {\r\n      text = text.replace(regex, `<b>${ent.name}</b>`);\r\n    }\r\n  }\r\n  for(let ent of sec.textrazor) {\r\n    let regex = new RegExp(`\\\\b${ent.text}\\\\b`);\r\n    text = text.replace(regex, `<b>${ent.text}</b>`);\r\n  }\r\n\r\n  return (\r\n    <section key={key} className=\"style1\" style={{ width: '45%' }}>\r\n      <div className=\"content\">\r\n        <blockquote style={{ borderLeftColor: heatHSL(sentiment), marginBottom: '0' }} dangerouslySetInnerHTML={{__html: text}}/>\r\n        <span>{mindWords.join(' ')}</span>\r\n      </div>\r\n      <br />\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction SpeakerBtn({ speaker }) {\r\n  let [visable, setVisable] = useState(false);\r\n  return (\r\n    <div style={{display: 'inline-block', padding: '1.5px'}}>\r\n      <i className=\"button small\" style={{backgroundColor: heatHSL(speaker.sent * 160)}}\r\n          onClick={() => setVisable(!visable)}>\r\n        {speaker.name} ({speaker.quotes.length})\r\n      </i>\r\n      {visable && speaker.quotes.map((quote, idx) => \r\n        <blockquote key={idx} style={{ borderLeftColor: heatHSL(quote.sent * 60) }}>{quote.text}</blockquote>)}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction WordBtn({ word, words }) {\r\n  let min = Math.min(...words.map(w => w.count));\r\n  let max = Math.max(...words.map(w => w.count));\r\n  return (\r\n    <div style={{display: 'inline-block', padding: '1.5px'}}>\r\n      <i className=\"button small\" style={{backgroundColor: `hsla(180, 75%, 75%, ${(word.count - min) / max})`}}>\r\n        {word.word} ({word.count})\r\n      </i>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Analyze;\r\n","import React from 'react';\nimport Intro from './components/Intro';\nimport Analyze from './components/Analyze';\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {db: null};\n  }\n\n  componentDidMount() {\n    (async () => {\n      let db = await fetch('/db.json').then(res => res.json());\n      this.setState({db: db});\n    })();\n  }\n\n  render() {\n    let { db } = this.state;\n    let search = window.location.search;\n    let selected = null;\n    if(search && db) {\n      let docNames = search.substring(1).split('-vs-');\n      selected = [\n        db.find(doc => doc.name == docNames[0]),\n        db.find(doc => doc.name == docNames[1])\n      ];\n    }\n    return (\n      <div className=\"App\">\n        {!search && !selected && <Intro db={db} />}\n        {selected && <Analyze selected={selected} />}\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}